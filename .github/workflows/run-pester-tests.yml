name: Run Pester Tests
permissions:
  contents: read

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Pester Tests with Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Pester
        shell: pwsh
        run: |
          Install-Module Pester -Force -SkipPublisherCheck

      - name: Run Pester with code coverage
        shell: pwsh
        run: |
          # Create output directory
          New-Item -ItemType Directory -Force -Path 'TestResults' | Out-Null
          
          $allScripts = Get-ChildItem -Path $PWD -Recurse -Include *.ps1 |
                        Where-Object { $_.FullName -notmatch '\\tests\\' }

          # create Pester configuration
          $config = New-PesterConfiguration
          $config.Run.Path = 'tests'
          $config.Run.PassThru = $true
          $config.CodeCoverage.Enabled = $true
          $config.CodeCoverage.Path = $allScripts.FullName
          $config.CodeCoverage.OutputFile = 'TestResults/coverage.cobertura.xml'
          $config.TestResult.Enabled = $true
          $config.TestResult.OutputPath = 'TestResults/TestResults.xml'
          $config.TestResult.OutputFormat = 'NUnitXml'
          $config.Output.Verbosity = 'Detailed'

          # run tests
          $results = Invoke-Pester -Configuration $config

          # save coverage as json
          $results.CodeCoverage | ConvertTo-Json -Depth 5 | Out-File 'TestResults/CodeCoverage.json'

          # set exit code for CI
          if ($results.FailedCount -gt 0) { exit 1 }

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: TestResults/coverage.cobertura.xml
          fail_ci_if_error: true
          verbose: true

      - name: Show coverage summary
        shell: pwsh
        run: |
          $coverage = [xml](Get-Content 'TestResults/coverage.cobertura.xml')
          $linesCovered = [int]$coverage.coverage.project.metrics.lines-covered
          $linesValid = [int]$coverage.coverage.project.metrics.lines-valid
          $percent = [math]::Round(($linesCovered / $linesValid * 100), 2)
          Write-Host "ðŸ“Š Code Coverage: $percent %"

      - name: Upload test and coverage results
        uses: actions/upload-artifact@v4
        with:
          name: Pester-Results
          path: TestResults/
